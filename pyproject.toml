[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spk-universal-timestamp"
version = "0.1.0"
description = "Comprehensive multi-scale timestamp system for knowledge bases: geological, astronomical, scientific, and cultural calendars"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Custom Dual License (Single Use Free / Commercial Paid)"}
authors = [
    {name = "Roswell C. Miller", email = "roswellmiller@gmail.com"}
]
maintainers = [
    {name = "Roswell C. Miller", email = "roswellmiller@gmail.com"}
]
keywords = ["timestamp", "datetime", "geological", "astronomical", "calendars", "precision", "scientific", "julian", "knowledge-base", "multi-scale"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "convertdate>=2.4.0",
    "astropy>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.2",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/spk-universal-timestamp"
"Bug Reports" = "https://github.com/yourusername/spk-universal-timestamp/issues"
"Source" = "https://github.com/yourusername/spk-universal-timestamp"
"Documentation" = "https://spk-universal-timestamp.readthedocs.io"

[tool.setuptools.packages.find]
where = ["."]
include = ["SPK_UniversalTimestamp*"]

[tool.setuptools.package-data]
"SPK_UniversalTimestamp" = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["Tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["SPK_UniversalTimestamp"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
